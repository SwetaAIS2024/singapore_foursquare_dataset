High level plan 1  for the code :
--------------------------------------------
--------------------------------------------

1. After the clsutering, for each cluster, need to do the following analysis:
    a. Archetype of the cluster
    b. Geometric parameters of each cluster

2. Using the above results, need to compute a funtion say G which is dependent on a. and b. 

                    G = Funtion( Archetype, Geometric parameters)

3. The result from this function G, will be used as the criteria for selecting base distribution.

                    Base distribution = Selection from options based on G for each cluster

4. Base distribution, possible options : Gaussian, Normal, Random, Beta, etc. 
5. After selecting the appropriate base distribution using results from G function, we will fit the 
distribution to each of the cluster.

                    Current distribution for cluster j = Fitting Base Distribution (Cluster j)

6. For clusters with very few points, say below a certain threshold K, skip the fitting approach and switch 
to the old good random sampling.

7. After getting the best possible current distribution for each clsuter, also need to evaluate he 
goodness-of-fit checks, few statistical tests, for example: KS, AIC, BIC

8. Then we do the sampling from each of the clusters using the current distribution. The no of sample points 
to be user defined bounded by the max and min values possible.

Evaluation tech:

1. Goodness-of-Fit for Fitted Distributions
Kolmogorov-Smirnov (KS) Test:
Compare the empirical distribution of real cluster data to the fitted distribution.
Anderson-Darling Test:
Another test for distributional similarity, especially sensitive to tails.
AIC/BIC:
Compare AIC/BIC values for different candidate distributions to ensure the best fit was chosen.
2. Distributional Comparison Between Real and Synthetic Data
Histogram/KDE Plots:
Overlay histograms or kernel density estimates for real and synthetic data for each cluster and feature.
Earth Mover’s Distance (Wasserstein Distance):
Quantifies the difference between two distributions.
3. Summary Statistics
Compare Means, Variances, Skewness, Kurtosis:
For each cluster and feature, compare these statistics between real and synthetic data.
4. Geometric Properties
Centroid Distance:
Compare the mean vectors of real and synthetic clusters.
Covariance Matrix Comparison:
Compare the spread and orientation (covariance) of real and synthetic clusters.
5. Cluster Structure
Silhouette Score:
Compare the silhouette scores of real and synthetic clusters to assess compactness and separation.
Re-clustering Consistency:
Cluster the synthetic data and check if the structure matches the real data.
6. Visualization
PCA/t-SNE/UMAP Plots:
Visualize real and synthetic data in reduced dimensions to check for structural similarity.



High level plan 2 for the code :
--------------------------------------------
--------------------------------------------

Your Plan (Restated)
Analyze each cluster for its archetype (center) and geometric parameters (shape, spread, possible value ranges).
Use these to select and fit a base distribution for each cluster, then sample synthetic data accordingly.

Alternative Method: Use the Paper’s Synthetic Cluster Generator
Instead of fitting distributions manually: Use the tool/method from the paper (e.g., repliclust) to generate synthetic clusters directly.

How it works:
1. Input the archetype (mean/center), geometric parameters (principal axes, variances, 
aspect ratio, etc.), and value ranges for each cluster.
2. The tool will generate synthetic data points that match the specified cluster geometry
and distributional properties.

Advantages:
1. Ensures the synthetic clusters have realistic shapes, spreads, and
overlaps as defined by your extracted parameters.
2. Reduces manual coding and leverages a well-tested synthetic data generator.
3. Can control for cluster overlap, imbalance, and other high-level properties 
as described in the paper.

How to Integrate This:
1. Extract archetype and geometric parameters from your real clusters.
2. Map these parameters to the input format required by the paper’s tool (e.g., repliclust).
3. Generate synthetic clusters using the tool, specifying the number of samples, value ranges, 
and other constraints as needed.


Evaluation :
1. Distributional Similarity
Histogram/KDE Comparison:
Plot histograms or kernel density estimates of key features for both real and synthetic data, cluster by cluster.
Statistical Tests:
Use tests like the Kolmogorov-Smirnov (KS) test or Earth Mover’s Distance (Wasserstein distance) to quantify similarity between distributions.
2. Geometric Properties
Centroid Distance:
Compare the centroids (means) of real and synthetic clusters.
Covariance/Shape:
Compare covariance matrices or principal components (PCA) to see if the spread and orientation match.
3. Cluster Assignment Consistency
Re-clustering:
Cluster the combined real and synthetic data. Check if synthetic points are assigned to the same clusters as their real counterparts.
Silhouette Score:
Compare silhouette scores for real and synthetic clusters to assess separation and compactness.
4. Visualization
Scatter Plots (PCA/t-SNE):
Visualize real and synthetic points together in 2D/3D using PCA or t-SNE to check for overlap and similarity in structure.
5. Summary Statistics
Compare Means, Variances, Skewness, Kurtosis:
For each feature and cluster, compare these statistics between real and synthetic data.
6. Overlap and Coverage
Convex Hull/Bounding Box:
Check if synthetic data covers the same region in feature space as real data.
Cluster Overlap Metrics:
Use LDA-based overlap or other overlap metrics to compare real and synthetic cluster separations.


Summary
This method is fully compatible with your plan.
It leverages the strengths of the paper’s synthetic data generator, ensuring your synthetic clusters are both realistic and customizable.
You still retain control over the number of samples, value ranges, and cluster properties.